#![allow(non_camel_case_types)]

#[derive(Debug)]
#[derive(PartialEq)]
pub enum Instruction {
    // x8/lsm
    LD_A_u8,
    LD_B_u8,
    LD_C_u8,
    LD_D_u8,
    LD_E_u8,
    LD_H_u8,
    LD_L_u8,
    
    LD_A_BC,
    LD_BC_A,
    LD_A_DE,
    LD_DE_A,

    LD_HL_A_Plus,
    LD_HL_A_Minus,
    LD_A_HL_Plus,
    LD_A_HL_Minus,

    LD_HL_u8,

    LD_B_A,
    LD_B_B,
    LD_B_C,
    LD_B_D,
    LD_B_E,
    LD_B_H,
    LD_B_L,
    LD_B_HL,

    LD_C_A,
    LD_C_B,
    LD_C_C,
    LD_C_D,
    LD_C_E,
    LD_C_H,
    LD_C_L,
    LD_C_HL,
    
    LD_D_A,
    LD_D_B,
    LD_D_C,
    LD_D_D,
    LD_D_E,
    LD_D_H,
    LD_D_L,
    LD_D_HL,

    LD_E_A,
    LD_E_B,
    LD_E_C,
    LD_E_D,
    LD_E_E,
    LD_E_H,
    LD_E_L,
    LD_E_HL,

    LD_H_A,
    LD_H_B,
    LD_H_C,
    LD_H_D,
    LD_H_E,
    LD_H_H,
    LD_H_L,
    LD_H_HL,

    LD_L_A,
    LD_L_B,
    LD_L_C,
    LD_L_D,
    LD_L_E,
    LD_L_H,
    LD_L_L,
    LD_L_HL,

    // x16/lsm
    LD_BC_u16,
    LD_DE_u16,
    LD_HL_u16,
    LD_SP_u16,
    LD_u16_SP,

    // x8/alu
    INC_A,
    INC_B,
    INC_C,
    INC_D,
    INC_E,
    INC_H,
    INC_L,
    DEC_A,
    DEC_B,
    DEC_C,
    DEC_D,
    DEC_E,
    DEC_H,
    DEC_L,

    DAA,
    SCF,
    CPL,
    CCF,

    // x16/alu
    INC_BC,
    INC_DE,
    INC_HL,
    INC_SP,
    DEC_BC,
    DEC_DE,
    DEC_HL,
    DEC_SP,
    ADD_HL_BC,
    ADD_HL_DE,
    ADD_HL_HL,
    ADD_HL_SP,

    // x8/rsb
    RLCA,
    RRCA,
    RLA,
    RRA,

    // control/branch
    JR_i8,
    JR_NZ_i8,
    JR_NC_i8,
    JR_C_i8,
    JR_Z_i8,
    JP_u16,

    // control/misc
    STOP,
    NOP,
    HALT,
    Invalid,
}

impl Instruction {
    pub fn decode(byte: u8) -> Instruction {
        match byte {
            0x00 => Instruction::NOP,
            0x01 => Instruction::LD_BC_u16,
            0x02 => Instruction::LD_BC_A,
            0x03 => Instruction::INC_BC,
            0x04 => Instruction::INC_B,
            0x05 => Instruction::DEC_B,
            0x06 => Instruction::LD_B_u8,
            0x07 => Instruction::RLCA,
            0x08 => Instruction::LD_u16_SP,
            0x09 => Instruction::ADD_HL_BC,
            0x0A => Instruction::LD_A_BC,
            0x0B => Instruction::DEC_BC,
            0x0C => Instruction::INC_C,
            0x0D => Instruction::DEC_C,
            0x0E => Instruction::LD_C_u8,
            0x0F => Instruction::RRCA,

            0x10 => Instruction::STOP,
            0x11 => Instruction::LD_DE_u16,
            0x12 => Instruction::LD_DE_A,
            0x13 => Instruction::INC_DE,
            0x14 => Instruction::INC_D,
            0x15 => Instruction::DEC_D,
            0x16 => Instruction::LD_D_u8,
            0x17 => Instruction::RLA,
            0x18 => Instruction::JR_i8,
            0x19 => Instruction::ADD_HL_DE,
            0x1A => Instruction::LD_A_DE,
            0x1B => Instruction::DEC_DE,
            0x1C => Instruction::INC_E,
            0x1D => Instruction::DEC_E,
            0x1E => Instruction::LD_E_u8,
            0x1F => Instruction::RRA,

            0x20 => Instruction::JR_NZ_i8,
            0x21 => Instruction::LD_HL_u16,
            0x22 => Instruction::LD_HL_A_Plus,
            0x23 => Instruction::INC_HL,
            0x24 => Instruction::INC_H,
            0x25 => Instruction::DEC_H,
            0x26 => Instruction::LD_H_u8,
            0x27 => Instruction::DAA,
            0x28 => Instruction::JR_Z_i8,
            0x29 => Instruction::ADD_HL_HL,
            0x2A => Instruction::LD_A_HL_Plus,
            0x2B => Instruction::DEC_HL,
            0x2C => Instruction::INC_L,
            0x2D => Instruction::DEC_L,
            0x2E => Instruction::LD_L_u8,
            0x2F => Instruction::CPL,

            0x30 => Instruction::JR_NC_i8,
            0x31 => Instruction::LD_SP_u16,
            0x32 => Instruction::LD_HL_A_Minus,
            0x33 => Instruction::INC_SP,
            0x34 => Instruction::INC_HL,
            0x35 => Instruction::DEC_HL,
            0x36 => Instruction::LD_HL_u8,
            0x37 => Instruction::SCF,
            0x38 => Instruction::JR_C_i8,
            0x39 => Instruction::ADD_HL_SP,
            0x3A => Instruction::LD_A_HL_Minus,
            0x3B => Instruction::DEC_SP,
            0x3C => Instruction::INC_A,
            0x3D => Instruction::DEC_A,
            0x3E => Instruction::LD_A_u8,
            0x3F => Instruction::CCF,

            0x40 => Instruction::LD_B_B,
            0x41 => Instruction::LD_B_C,
            0x42 => Instruction::LD_B_D,
            0x43 => Instruction::LD_B_E,
            0x44 => Instruction::LD_B_H,
            0x45 => Instruction::LD_B_L,
            0x46 => Instruction::LD_B_HL,
            0x47 => Instruction::LD_B_A,
            0x48 => Instruction::LD_C_B,
            0x49 => Instruction::LD_C_C,
            0x4A => Instruction::LD_C_D,
            0x4B => Instruction::LD_C_E,
            0x4C => Instruction::LD_C_H,
            0x4D => Instruction::LD_C_L,
            0x4E => Instruction::LD_C_HL,
            0x4F => Instruction::LD_C_A,

            0x50 => Instruction::LD_D_B,
            0x51 => Instruction::LD_D_C,
            0x52 => Instruction::LD_D_D,
            0x53 => Instruction::LD_D_E,
            0x54 => Instruction::LD_D_H,
            0x55 => Instruction::LD_D_L,
            0x56 => Instruction::LD_D_HL,
            0x57 => Instruction::LD_D_A,
            0x58 => Instruction::LD_E_B,
            0x59 => Instruction::LD_E_C,
            0x5A => Instruction::LD_E_D,
            0x5B => Instruction::LD_E_E,
            0x5C => Instruction::LD_E_H,
            0x5D => Instruction::LD_E_L,
            0x5E => Instruction::LD_E_HL,
            0x5F => Instruction::LD_E_A,

            0x60 => todo!(),
            0x61 => todo!(),
            0x62 => todo!(),
            0x63 => todo!(),
            0x64 => todo!(),
            0x65 => todo!(),
            0x66 => todo!(),
            0x67 => todo!(),
            0x68 => todo!(),
            0x69 => todo!(),
            0x6A => todo!(),
            0x6B => todo!(),
            0x6C => todo!(),
            0x6D => todo!(),
            0x6E => todo!(),
            0x6F => todo!(),

            0x70 => todo!(),
            0x71 => todo!(),
            0x72 => todo!(),
            0x73 => todo!(),
            0x74 => todo!(),
            0x75 => todo!(),
            0x76 => todo!(),
            0x77 => todo!(),
            0x78 => todo!(),
            0x79 => todo!(),
            0x7A => todo!(),
            0x7B => todo!(),
            0x7C => todo!(),
            0x7D => todo!(),
            0x7E => todo!(),
            0x7F => todo!(),

            0x80 => todo!(),
            0x81 => todo!(),
            0x82 => todo!(),
            0x83 => todo!(),
            0x84 => todo!(),
            0x85 => todo!(),
            0x86 => todo!(),
            0x87 => todo!(),
            0x88 => todo!(),
            0x89 => todo!(),
            0x8A => todo!(),
            0x8B => todo!(),
            0x8C => todo!(),
            0x8D => todo!(),
            0x8E => todo!(),
            0x8F => todo!(),

            0x90 => todo!(),
            0x91 => todo!(),
            0x92 => todo!(),
            0x93 => todo!(),
            0x94 => todo!(),
            0x95 => todo!(),
            0x96 => todo!(),
            0x97 => todo!(),
            0x98 => todo!(),
            0x99 => todo!(),
            0x9A => todo!(),
            0x9B => todo!(),
            0x9C => todo!(),
            0x9D => todo!(),
            0x9E => todo!(),
            0x9F => todo!(),

            0xA0 => todo!(),
            0xA1 => todo!(),
            0xA2 => todo!(),
            0xA3 => todo!(),
            0xA4 => todo!(),
            0xA5 => todo!(),
            0xA6 => todo!(),
            0xA7 => todo!(),
            0xA8 => todo!(),
            0xA9 => todo!(),
            0xAA => todo!(),
            0xAB => todo!(),
            0xAC => todo!(),
            0xAD => todo!(),
            0xAE => todo!(),
            0xAF => todo!(),

            0xB0 => todo!(),
            0xB1 => todo!(),
            0xB2 => todo!(),
            0xB3 => todo!(),
            0xB4 => todo!(),
            0xB5 => todo!(),
            0xB6 => todo!(),
            0xB7 => todo!(),
            0xB8 => todo!(),
            0xB9 => todo!(),
            0xBA => todo!(),
            0xBB => todo!(),
            0xBC => todo!(),
            0xBD => todo!(),
            0xBE => todo!(),
            0xBF => todo!(),

            0xC0 => todo!(),
            0xC1 => todo!(),
            0xC2 => todo!(),
            0xC3 => todo!(),
            0xC4 => todo!(),
            0xC5 => todo!(),
            0xC6 => todo!(),
            0xC7 => todo!(),
            0xC8 => todo!(),
            0xC9 => todo!(),
            0xCA => todo!(),
            0xCB => todo!(),
            0xCC => todo!(),
            0xCD => todo!(),
            0xCE => todo!(),
            0xCF => todo!(),

            0xD0 => todo!(),
            0xD1 => todo!(),
            0xD2 => todo!(),
            0xD3 => todo!(),
            0xD4 => todo!(),
            0xD5 => todo!(),
            0xD6 => todo!(),
            0xD7 => todo!(),
            0xD8 => todo!(),
            0xD9 => todo!(),
            0xDA => todo!(),
            0xDB => todo!(),
            0xDC => todo!(),
            0xDD => todo!(),
            0xDE => todo!(),
            0xDF => todo!(),

            0xE0 => todo!(),
            0xE1 => todo!(),
            0xE2 => todo!(),
            0xE3 => todo!(),
            0xE4 => todo!(),
            0xE5 => todo!(),
            0xE6 => todo!(),
            0xE7 => todo!(),
            0xE8 => todo!(),
            0xE9 => todo!(),
            0xEA => todo!(),
            0xEB => todo!(),
            0xEC => todo!(),
            0xED => todo!(),
            0xEE => todo!(),
            0xEF => todo!(),

            0xF0 => todo!(),
            0xF1 => todo!(),
            0xF2 => todo!(),
            0xF3 => todo!(),
            0xF4 => todo!(),
            0xF5 => todo!(),
            0xF6 => todo!(),
            0xF7 => todo!(),
            0xF8 => todo!(),
            0xF9 => todo!(),
            0xFA => todo!(),
            0xFB => todo!(),
            0xFC => todo!(),
            0xFD => todo!(),
            0xFE => todo!(),
            0xFF => todo!(),            

            _ => Instruction::Invalid
        }
    }
}
